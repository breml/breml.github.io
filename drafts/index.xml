<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Drafts on breml's blog</title><link>https://breml.github.io/drafts/</link><description>Recent content in Drafts on breml's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://breml.github.io/drafts/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://breml.github.io/drafts/about_new/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://breml.github.io/drafts/about_new/</guid><description>https://www.slideshare.net/breml/elastic-stack-swisscom-application-cloud https://www.youtube.com/watch?v=REsBjdhUbWo
Update About in Blog
Update Linkedin &amp;amp; Xing Profiles
Add Blog Post about Logstash Config Parser
And so on…</description></item><item><title/><link>https://breml.github.io/drafts/blog-post-shave-of-tls-hand-shake-from-lambda-execution-time/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://breml.github.io/drafts/blog-post-shave-of-tls-hand-shake-from-lambda-execution-time/</guid><description>Blog Post: Shave of TLS hand shake from Lambda execution time For connections to relational databases it is common to have some sort of connect command, which is used during program initialization (e.g connection pool) But what is the equivalent for modern, rest API based services? Does it also work with Slack connection?</description></item><item><title/><link>https://breml.github.io/drafts/integration-tests-env-var/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://breml.github.io/drafts/integration-tests-env-var/</guid><description>Wieso env var
better compatibility with most ide, because in most cases support for build tags is not great and they can confuse auto suggestion, etc. also other static code analysis tools like linters might have problems or not able to process the integration test files better usage of build cache, no need to recompile packages compatible with ./&amp;hellip; possible to have unit tests and integration tests in the same test file simple concept already used in other places for configuration, nothing new to learn better compatibility with other test wrappers like go-acc for measuring coverage.</description></item><item><title/><link>https://breml.github.io/drafts/peg-in-go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://breml.github.io/drafts/peg-in-go/</guid><description>PEG in Go Error Handling Error Branch with / Return Error Panic if not recoverable
Steht der Error Stack zu verfügung im Parser? Können Fehler zurückgesetzt werden?
Customized Errors zurück geben: Missing Keyword/Keyword expected error, Keyword in Field Missing closing xy (&amp;quot;, ), usw.) Expected Blockstart Element, usw.
Wie sind die lesbaren Rulenames nutzbar?</description></item></channel></rss>